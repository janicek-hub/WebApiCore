{
  "openapi": "3.0.1",
  "info": {
    "title": "Product API",
    "description": "",
    "version": "v1"
  },
  "paths": {
    "/api/v1/products/all": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Return all products",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/products/pagination": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Return a paginated list of products",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductDTO"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/products/{id}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get product by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Product"
        ],
        "summary": "Updates description of product",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Data for update.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductPatchDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductPatchDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductPatchDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns updated product item.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDTO"
                }
              }
            }
          },
          "400": {
            "description": "Returns ProblemDetail with message.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Returns ProblemDetail with exception.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Version": {
      "get": {
        "tags": [
          "Version"
        ],
        "summary": "Returns version of the current api\r\n\r\nFor development purposes it returns version of assembly, for production purposes it returns string build by pipeline which contains project information, pipeline build version, assembly version, and build date",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Version"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Version"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Version"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "ProductDTO": {
        "required": [
          "imgUri",
          "name",
          "price"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Product identifier",
            "format": "int32"
          },
          "name": {
            "maxLength": 250,
            "minLength": 1,
            "type": "string",
            "description": "Product name"
          },
          "imgUri": {
            "maxLength": 500,
            "minLength": 1,
            "type": "string",
            "description": "Product image"
          },
          "price": {
            "type": "number",
            "description": "Product price",
            "format": "double"
          },
          "description": {
            "maxLength": 500,
            "type": "string",
            "description": "Product description",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "ProductDTO"
      },
      "ProductPatchDTO": {
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 500,
            "type": "string",
            "description": "Product description",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "ProductPatchDTO"
      },
      "Version": {
        "type": "object",
        "properties": {
          "instanceIdentifier": {
            "type": "string",
            "description": "Instance identifier. Every application runtime has its own guid. If 3 pods are launched in kubernetes, it is possible to identify instance by this identifier",
            "nullable": true
          },
          "instanceStartedAt": {
            "type": "string",
            "description": "Last time when instance has been reset",
            "nullable": true
          },
          "applicationName": {
            "type": "string",
            "description": "Application name",
            "nullable": true
          },
          "dockerImage": {
            "type": "string",
            "description": "Full docker image with name and version",
            "nullable": true
          },
          "dockerImageVersion": {
            "type": "string",
            "description": "Docker image version",
            "nullable": true
          },
          "buildNumber": {
            "type": "string",
            "description": "Build number from devops or github actions",
            "nullable": true
          },
          "dllVersion": {
            "type": "string",
            "description": "Application dll version",
            "nullable": true
          },
          "sourceVersion": {
            "type": "string",
            "description": "Version of commit or changeset",
            "nullable": true
          },
          "buildTime": {
            "type": "string",
            "description": "Dll build time",
            "nullable": true
          },
          "culture": {
            "type": "string",
            "description": "Culture info",
            "nullable": true
          },
          "status": {
            "type": "string",
            "description": "Status to validate functionality",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "API version information"
      }
    },
    "securitySchemes": {
      "oauth2": {
        "type": "apiKey",
        "description": "Bearer token.",
        "name": "Authorization",
        "in": "header"
      }
    }
  }
}